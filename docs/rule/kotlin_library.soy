{namespace kotlin_library}

/***/
{template .soyweb}
  {call buck.page}
    {param title: 'kotlin_library()' /}
    {param navid: 'rule_kotlin_library' /}
    {param prettify: true /}
    {param description}
      A rule that is used to define a set of Kotlin files that can be compiled
      together.
    {/param}
    {param content}

{call buck.rule}
{param status: 'UNFROZEN' /}
{param overview}
A <code>kotlin_library()</code> rule is used to define a set of Kotlin
files that can be compiled together. The main output of a
{sp}<code>kotlin_library()</code> rule is a single JAR file containing all
of the compiled class files and resources.
{/param}

{param args}

{call buck.arg}
  {param name: 'name' /}
  {param desc}
  The name of the rule.
  {/param}
{/call}

{call buck.arg}
  {param name: 'srcs' /}
  {param default: '[]' /}
  {param desc}
  The set of <code>.kt</code>, <code>.java</code> or <code>.kts</code> files to compile for this rule.
  If any of the files in this list end in <code>.src.zip</code>,
  then the entries in the ZIP file that end in <code>.java</code> or <code>.kt</code> will be
  included as ordinary inputs to compilation.
  {/param}
{/call}

{call jvm_common.resources_arg /}

{call buck.arg}
  {param name: 'deps' /}
  {param default: '[]' /}
  {param desc}
  Rules (usually other <code>kotlin_library</code> rules) that are used to
  generate the classpath required to compile this <code>kotlin_library</code>.
  {/param}
{/call}

{call buck.arg}
  {param name: 'extra_arguments' /}
  {param default: '[]' /}
  {param desc}
  List of additional arguments to pass into the Kotlin compiler.
  {/param}
{/call}

{call jvm_common.remove_classes_arg /}

{call jvm_common.exported_deps}
  {param library: 'kotlin_library' /}
{/call}

{call jvm_common.provided_deps}
  {param binary: 'kotlin_library' /}
{/call}

{call jvm_common.exported_provided_deps /}

{call buck.labels_arg /}

{call buck.tests_arg /}

{/param} // close args

{param examples}

{literal}<pre class="prettyprint lang-py">
# A rule that compiles a single .kt file.
kotlin_library(
  name = 'JsonUtil',
  srcs = ['JsonUtil.kt'],
  deps = [
    '//third_party/guava:guava',
    '//third_party/jackson:jackson',
  ],
)

# A rule that compiles all of the .kt files under the directory in
# which the rule is defined using glob(). It also excludes an
# individual file that may have additional dependencies, so it is
# compiled by a separate rule.
kotlin_library(
  name = 'messenger',
  srcs = glob(['**/*.kt'], excludes = ['MessengerModule.kt']),
  deps = [
    '//src/com/facebook/base:base',
    '//third_party/guava:guava',
  ],
)

kotlin_library(
  name = 'MessengerModule',
  srcs = ['MessengerModule.kt'],
  deps = [
    '//src/com/facebook/base:base',
    '//src/com/google/inject:inject',
    '//third_party/guava:guava',
    '//third_party/jsr-330:jsr-330',
  ],
)

# A rule that builds a library with both relative and
# fully-qualified deps.
kotlin_library(
  name = 'testutil',
  srcs = glob(['tests/**/*.kt'], excludes = 'tests/**/*Test.kt'),
  deps = [
    ':lib-fb4a',
    '//java/com/facebook/base:base',
  ],
)
</pre>{/literal}
{/param}

{/call} // close buck.rule

    {/param}
  {/call}
{/template}

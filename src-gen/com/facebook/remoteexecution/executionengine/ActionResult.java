/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.facebook.remoteexecution.executionengine;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)")
public class ActionResult implements org.apache.thrift.TBase<ActionResult, ActionResult._Fields>, java.io.Serializable, Cloneable, Comparable<ActionResult> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ActionResult");

  private static final org.apache.thrift.protocol.TField OUTPUT_FILES_FIELD_DESC = new org.apache.thrift.protocol.TField("output_files", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField OUTPUT_DIRECTORIES_FIELD_DESC = new org.apache.thrift.protocol.TField("output_directories", org.apache.thrift.protocol.TType.LIST, (short)2);
  private static final org.apache.thrift.protocol.TField EXIT_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("exit_code", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField STDOUT_RAW_FIELD_DESC = new org.apache.thrift.protocol.TField("stdout_raw", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField STDOUT_DIGEST_FIELD_DESC = new org.apache.thrift.protocol.TField("stdout_digest", org.apache.thrift.protocol.TType.STRUCT, (short)5);
  private static final org.apache.thrift.protocol.TField STDERR_RAW_FIELD_DESC = new org.apache.thrift.protocol.TField("stderr_raw", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField STDERR_DIGEST_FIELD_DESC = new org.apache.thrift.protocol.TField("stderr_digest", org.apache.thrift.protocol.TType.STRUCT, (short)7);
  private static final org.apache.thrift.protocol.TField DURATION_SECS_FIELD_DESC = new org.apache.thrift.protocol.TField("duration_secs", org.apache.thrift.protocol.TType.I64, (short)8);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ActionResultStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ActionResultTupleSchemeFactory();

  public java.util.List<OutputFile> output_files; // required
  public java.util.List<OutputDirectory> output_directories; // required
  public int exit_code; // required
  public java.nio.ByteBuffer stdout_raw; // optional
  public com.facebook.remoteexecution.cas.Digest stdout_digest; // optional
  public java.nio.ByteBuffer stderr_raw; // optional
  public com.facebook.remoteexecution.cas.Digest stderr_digest; // optional
  public long duration_secs; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    OUTPUT_FILES((short)1, "output_files"),
    OUTPUT_DIRECTORIES((short)2, "output_directories"),
    EXIT_CODE((short)3, "exit_code"),
    STDOUT_RAW((short)4, "stdout_raw"),
    STDOUT_DIGEST((short)5, "stdout_digest"),
    STDERR_RAW((short)6, "stderr_raw"),
    STDERR_DIGEST((short)7, "stderr_digest"),
    DURATION_SECS((short)8, "duration_secs");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // OUTPUT_FILES
          return OUTPUT_FILES;
        case 2: // OUTPUT_DIRECTORIES
          return OUTPUT_DIRECTORIES;
        case 3: // EXIT_CODE
          return EXIT_CODE;
        case 4: // STDOUT_RAW
          return STDOUT_RAW;
        case 5: // STDOUT_DIGEST
          return STDOUT_DIGEST;
        case 6: // STDERR_RAW
          return STDERR_RAW;
        case 7: // STDERR_DIGEST
          return STDERR_DIGEST;
        case 8: // DURATION_SECS
          return DURATION_SECS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __EXIT_CODE_ISSET_ID = 0;
  private static final int __DURATION_SECS_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.STDOUT_RAW,_Fields.STDOUT_DIGEST,_Fields.STDERR_RAW,_Fields.STDERR_DIGEST};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.OUTPUT_FILES, new org.apache.thrift.meta_data.FieldMetaData("output_files", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, OutputFile.class))));
    tmpMap.put(_Fields.OUTPUT_DIRECTORIES, new org.apache.thrift.meta_data.FieldMetaData("output_directories", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, OutputDirectory.class))));
    tmpMap.put(_Fields.EXIT_CODE, new org.apache.thrift.meta_data.FieldMetaData("exit_code", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STDOUT_RAW, new org.apache.thrift.meta_data.FieldMetaData("stdout_raw", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , true)));
    tmpMap.put(_Fields.STDOUT_DIGEST, new org.apache.thrift.meta_data.FieldMetaData("stdout_digest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.facebook.remoteexecution.cas.Digest.class)));
    tmpMap.put(_Fields.STDERR_RAW, new org.apache.thrift.meta_data.FieldMetaData("stderr_raw", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , true)));
    tmpMap.put(_Fields.STDERR_DIGEST, new org.apache.thrift.meta_data.FieldMetaData("stderr_digest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.facebook.remoteexecution.cas.Digest.class)));
    tmpMap.put(_Fields.DURATION_SECS, new org.apache.thrift.meta_data.FieldMetaData("duration_secs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ActionResult.class, metaDataMap);
  }

  public ActionResult() {
  }

  public ActionResult(
    java.util.List<OutputFile> output_files,
    java.util.List<OutputDirectory> output_directories,
    int exit_code,
    long duration_secs)
  {
    this();
    this.output_files = output_files;
    this.output_directories = output_directories;
    this.exit_code = exit_code;
    setExit_codeIsSet(true);
    this.duration_secs = duration_secs;
    setDuration_secsIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ActionResult(ActionResult other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetOutput_files()) {
      java.util.List<OutputFile> __this__output_files = new java.util.ArrayList<OutputFile>(other.output_files.size());
      for (OutputFile other_element : other.output_files) {
        __this__output_files.add(new OutputFile(other_element));
      }
      this.output_files = __this__output_files;
    }
    if (other.isSetOutput_directories()) {
      java.util.List<OutputDirectory> __this__output_directories = new java.util.ArrayList<OutputDirectory>(other.output_directories.size());
      for (OutputDirectory other_element : other.output_directories) {
        __this__output_directories.add(new OutputDirectory(other_element));
      }
      this.output_directories = __this__output_directories;
    }
    this.exit_code = other.exit_code;
    if (other.isSetStdout_raw()) {
      this.stdout_raw = org.apache.thrift.TBaseHelper.copyBinary(other.stdout_raw);
    }
    if (other.isSetStdout_digest()) {
      this.stdout_digest = new com.facebook.remoteexecution.cas.Digest(other.stdout_digest);
    }
    if (other.isSetStderr_raw()) {
      this.stderr_raw = org.apache.thrift.TBaseHelper.copyBinary(other.stderr_raw);
    }
    if (other.isSetStderr_digest()) {
      this.stderr_digest = new com.facebook.remoteexecution.cas.Digest(other.stderr_digest);
    }
    this.duration_secs = other.duration_secs;
  }

  public ActionResult deepCopy() {
    return new ActionResult(this);
  }

  @Override
  public void clear() {
    this.output_files = null;
    this.output_directories = null;
    setExit_codeIsSet(false);
    this.exit_code = 0;
    this.stdout_raw = null;
    this.stdout_digest = null;
    this.stderr_raw = null;
    this.stderr_digest = null;
    setDuration_secsIsSet(false);
    this.duration_secs = 0;
  }

  public int getOutput_filesSize() {
    return (this.output_files == null) ? 0 : this.output_files.size();
  }

  public java.util.Iterator<OutputFile> getOutput_filesIterator() {
    return (this.output_files == null) ? null : this.output_files.iterator();
  }

  public void addToOutput_files(OutputFile elem) {
    if (this.output_files == null) {
      this.output_files = new java.util.ArrayList<OutputFile>();
    }
    this.output_files.add(elem);
  }

  public java.util.List<OutputFile> getOutput_files() {
    return this.output_files;
  }

  public ActionResult setOutput_files(java.util.List<OutputFile> output_files) {
    this.output_files = output_files;
    return this;
  }

  public void unsetOutput_files() {
    this.output_files = null;
  }

  /** Returns true if field output_files is set (has been assigned a value) and false otherwise */
  public boolean isSetOutput_files() {
    return this.output_files != null;
  }

  public void setOutput_filesIsSet(boolean value) {
    if (!value) {
      this.output_files = null;
    }
  }

  public int getOutput_directoriesSize() {
    return (this.output_directories == null) ? 0 : this.output_directories.size();
  }

  public java.util.Iterator<OutputDirectory> getOutput_directoriesIterator() {
    return (this.output_directories == null) ? null : this.output_directories.iterator();
  }

  public void addToOutput_directories(OutputDirectory elem) {
    if (this.output_directories == null) {
      this.output_directories = new java.util.ArrayList<OutputDirectory>();
    }
    this.output_directories.add(elem);
  }

  public java.util.List<OutputDirectory> getOutput_directories() {
    return this.output_directories;
  }

  public ActionResult setOutput_directories(java.util.List<OutputDirectory> output_directories) {
    this.output_directories = output_directories;
    return this;
  }

  public void unsetOutput_directories() {
    this.output_directories = null;
  }

  /** Returns true if field output_directories is set (has been assigned a value) and false otherwise */
  public boolean isSetOutput_directories() {
    return this.output_directories != null;
  }

  public void setOutput_directoriesIsSet(boolean value) {
    if (!value) {
      this.output_directories = null;
    }
  }

  public int getExit_code() {
    return this.exit_code;
  }

  public ActionResult setExit_code(int exit_code) {
    this.exit_code = exit_code;
    setExit_codeIsSet(true);
    return this;
  }

  public void unsetExit_code() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EXIT_CODE_ISSET_ID);
  }

  /** Returns true if field exit_code is set (has been assigned a value) and false otherwise */
  public boolean isSetExit_code() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EXIT_CODE_ISSET_ID);
  }

  public void setExit_codeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EXIT_CODE_ISSET_ID, value);
  }

  public byte[] getStdout_raw() {
    setStdout_raw(org.apache.thrift.TBaseHelper.rightSize(stdout_raw));
    return stdout_raw == null ? null : stdout_raw.array();
  }

  public java.nio.ByteBuffer bufferForStdout_raw() {
    return org.apache.thrift.TBaseHelper.copyBinary(stdout_raw);
  }

  public ActionResult setStdout_raw(byte[] stdout_raw) {
    this.stdout_raw = stdout_raw == null ? (java.nio.ByteBuffer)null : java.nio.ByteBuffer.wrap(stdout_raw.clone());
    return this;
  }

  public ActionResult setStdout_raw(java.nio.ByteBuffer stdout_raw) {
    this.stdout_raw = org.apache.thrift.TBaseHelper.copyBinary(stdout_raw);
    return this;
  }

  public void unsetStdout_raw() {
    this.stdout_raw = null;
  }

  /** Returns true if field stdout_raw is set (has been assigned a value) and false otherwise */
  public boolean isSetStdout_raw() {
    return this.stdout_raw != null;
  }

  public void setStdout_rawIsSet(boolean value) {
    if (!value) {
      this.stdout_raw = null;
    }
  }

  public com.facebook.remoteexecution.cas.Digest getStdout_digest() {
    return this.stdout_digest;
  }

  public ActionResult setStdout_digest(com.facebook.remoteexecution.cas.Digest stdout_digest) {
    this.stdout_digest = stdout_digest;
    return this;
  }

  public void unsetStdout_digest() {
    this.stdout_digest = null;
  }

  /** Returns true if field stdout_digest is set (has been assigned a value) and false otherwise */
  public boolean isSetStdout_digest() {
    return this.stdout_digest != null;
  }

  public void setStdout_digestIsSet(boolean value) {
    if (!value) {
      this.stdout_digest = null;
    }
  }

  public byte[] getStderr_raw() {
    setStderr_raw(org.apache.thrift.TBaseHelper.rightSize(stderr_raw));
    return stderr_raw == null ? null : stderr_raw.array();
  }

  public java.nio.ByteBuffer bufferForStderr_raw() {
    return org.apache.thrift.TBaseHelper.copyBinary(stderr_raw);
  }

  public ActionResult setStderr_raw(byte[] stderr_raw) {
    this.stderr_raw = stderr_raw == null ? (java.nio.ByteBuffer)null : java.nio.ByteBuffer.wrap(stderr_raw.clone());
    return this;
  }

  public ActionResult setStderr_raw(java.nio.ByteBuffer stderr_raw) {
    this.stderr_raw = org.apache.thrift.TBaseHelper.copyBinary(stderr_raw);
    return this;
  }

  public void unsetStderr_raw() {
    this.stderr_raw = null;
  }

  /** Returns true if field stderr_raw is set (has been assigned a value) and false otherwise */
  public boolean isSetStderr_raw() {
    return this.stderr_raw != null;
  }

  public void setStderr_rawIsSet(boolean value) {
    if (!value) {
      this.stderr_raw = null;
    }
  }

  public com.facebook.remoteexecution.cas.Digest getStderr_digest() {
    return this.stderr_digest;
  }

  public ActionResult setStderr_digest(com.facebook.remoteexecution.cas.Digest stderr_digest) {
    this.stderr_digest = stderr_digest;
    return this;
  }

  public void unsetStderr_digest() {
    this.stderr_digest = null;
  }

  /** Returns true if field stderr_digest is set (has been assigned a value) and false otherwise */
  public boolean isSetStderr_digest() {
    return this.stderr_digest != null;
  }

  public void setStderr_digestIsSet(boolean value) {
    if (!value) {
      this.stderr_digest = null;
    }
  }

  public long getDuration_secs() {
    return this.duration_secs;
  }

  public ActionResult setDuration_secs(long duration_secs) {
    this.duration_secs = duration_secs;
    setDuration_secsIsSet(true);
    return this;
  }

  public void unsetDuration_secs() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DURATION_SECS_ISSET_ID);
  }

  /** Returns true if field duration_secs is set (has been assigned a value) and false otherwise */
  public boolean isSetDuration_secs() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DURATION_SECS_ISSET_ID);
  }

  public void setDuration_secsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DURATION_SECS_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case OUTPUT_FILES:
      if (value == null) {
        unsetOutput_files();
      } else {
        setOutput_files((java.util.List<OutputFile>)value);
      }
      break;

    case OUTPUT_DIRECTORIES:
      if (value == null) {
        unsetOutput_directories();
      } else {
        setOutput_directories((java.util.List<OutputDirectory>)value);
      }
      break;

    case EXIT_CODE:
      if (value == null) {
        unsetExit_code();
      } else {
        setExit_code((java.lang.Integer)value);
      }
      break;

    case STDOUT_RAW:
      if (value == null) {
        unsetStdout_raw();
      } else {
        if (value instanceof byte[]) {
          setStdout_raw((byte[])value);
        } else {
          setStdout_raw((java.nio.ByteBuffer)value);
        }
      }
      break;

    case STDOUT_DIGEST:
      if (value == null) {
        unsetStdout_digest();
      } else {
        setStdout_digest((com.facebook.remoteexecution.cas.Digest)value);
      }
      break;

    case STDERR_RAW:
      if (value == null) {
        unsetStderr_raw();
      } else {
        if (value instanceof byte[]) {
          setStderr_raw((byte[])value);
        } else {
          setStderr_raw((java.nio.ByteBuffer)value);
        }
      }
      break;

    case STDERR_DIGEST:
      if (value == null) {
        unsetStderr_digest();
      } else {
        setStderr_digest((com.facebook.remoteexecution.cas.Digest)value);
      }
      break;

    case DURATION_SECS:
      if (value == null) {
        unsetDuration_secs();
      } else {
        setDuration_secs((java.lang.Long)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case OUTPUT_FILES:
      return getOutput_files();

    case OUTPUT_DIRECTORIES:
      return getOutput_directories();

    case EXIT_CODE:
      return getExit_code();

    case STDOUT_RAW:
      return getStdout_raw();

    case STDOUT_DIGEST:
      return getStdout_digest();

    case STDERR_RAW:
      return getStderr_raw();

    case STDERR_DIGEST:
      return getStderr_digest();

    case DURATION_SECS:
      return getDuration_secs();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case OUTPUT_FILES:
      return isSetOutput_files();
    case OUTPUT_DIRECTORIES:
      return isSetOutput_directories();
    case EXIT_CODE:
      return isSetExit_code();
    case STDOUT_RAW:
      return isSetStdout_raw();
    case STDOUT_DIGEST:
      return isSetStdout_digest();
    case STDERR_RAW:
      return isSetStderr_raw();
    case STDERR_DIGEST:
      return isSetStderr_digest();
    case DURATION_SECS:
      return isSetDuration_secs();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof ActionResult)
      return this.equals((ActionResult)that);
    return false;
  }

  public boolean equals(ActionResult that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_output_files = true && this.isSetOutput_files();
    boolean that_present_output_files = true && that.isSetOutput_files();
    if (this_present_output_files || that_present_output_files) {
      if (!(this_present_output_files && that_present_output_files))
        return false;
      if (!this.output_files.equals(that.output_files))
        return false;
    }

    boolean this_present_output_directories = true && this.isSetOutput_directories();
    boolean that_present_output_directories = true && that.isSetOutput_directories();
    if (this_present_output_directories || that_present_output_directories) {
      if (!(this_present_output_directories && that_present_output_directories))
        return false;
      if (!this.output_directories.equals(that.output_directories))
        return false;
    }

    boolean this_present_exit_code = true;
    boolean that_present_exit_code = true;
    if (this_present_exit_code || that_present_exit_code) {
      if (!(this_present_exit_code && that_present_exit_code))
        return false;
      if (this.exit_code != that.exit_code)
        return false;
    }

    boolean this_present_stdout_raw = true && this.isSetStdout_raw();
    boolean that_present_stdout_raw = true && that.isSetStdout_raw();
    if (this_present_stdout_raw || that_present_stdout_raw) {
      if (!(this_present_stdout_raw && that_present_stdout_raw))
        return false;
      if (!this.stdout_raw.equals(that.stdout_raw))
        return false;
    }

    boolean this_present_stdout_digest = true && this.isSetStdout_digest();
    boolean that_present_stdout_digest = true && that.isSetStdout_digest();
    if (this_present_stdout_digest || that_present_stdout_digest) {
      if (!(this_present_stdout_digest && that_present_stdout_digest))
        return false;
      if (!this.stdout_digest.equals(that.stdout_digest))
        return false;
    }

    boolean this_present_stderr_raw = true && this.isSetStderr_raw();
    boolean that_present_stderr_raw = true && that.isSetStderr_raw();
    if (this_present_stderr_raw || that_present_stderr_raw) {
      if (!(this_present_stderr_raw && that_present_stderr_raw))
        return false;
      if (!this.stderr_raw.equals(that.stderr_raw))
        return false;
    }

    boolean this_present_stderr_digest = true && this.isSetStderr_digest();
    boolean that_present_stderr_digest = true && that.isSetStderr_digest();
    if (this_present_stderr_digest || that_present_stderr_digest) {
      if (!(this_present_stderr_digest && that_present_stderr_digest))
        return false;
      if (!this.stderr_digest.equals(that.stderr_digest))
        return false;
    }

    boolean this_present_duration_secs = true;
    boolean that_present_duration_secs = true;
    if (this_present_duration_secs || that_present_duration_secs) {
      if (!(this_present_duration_secs && that_present_duration_secs))
        return false;
      if (this.duration_secs != that.duration_secs)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetOutput_files()) ? 131071 : 524287);
    if (isSetOutput_files())
      hashCode = hashCode * 8191 + output_files.hashCode();

    hashCode = hashCode * 8191 + ((isSetOutput_directories()) ? 131071 : 524287);
    if (isSetOutput_directories())
      hashCode = hashCode * 8191 + output_directories.hashCode();

    hashCode = hashCode * 8191 + exit_code;

    hashCode = hashCode * 8191 + ((isSetStdout_raw()) ? 131071 : 524287);
    if (isSetStdout_raw())
      hashCode = hashCode * 8191 + stdout_raw.hashCode();

    hashCode = hashCode * 8191 + ((isSetStdout_digest()) ? 131071 : 524287);
    if (isSetStdout_digest())
      hashCode = hashCode * 8191 + stdout_digest.hashCode();

    hashCode = hashCode * 8191 + ((isSetStderr_raw()) ? 131071 : 524287);
    if (isSetStderr_raw())
      hashCode = hashCode * 8191 + stderr_raw.hashCode();

    hashCode = hashCode * 8191 + ((isSetStderr_digest()) ? 131071 : 524287);
    if (isSetStderr_digest())
      hashCode = hashCode * 8191 + stderr_digest.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(duration_secs);

    return hashCode;
  }

  @Override
  public int compareTo(ActionResult other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetOutput_files()).compareTo(other.isSetOutput_files());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutput_files()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.output_files, other.output_files);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOutput_directories()).compareTo(other.isSetOutput_directories());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutput_directories()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.output_directories, other.output_directories);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExit_code()).compareTo(other.isSetExit_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExit_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.exit_code, other.exit_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStdout_raw()).compareTo(other.isSetStdout_raw());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStdout_raw()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stdout_raw, other.stdout_raw);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStdout_digest()).compareTo(other.isSetStdout_digest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStdout_digest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stdout_digest, other.stdout_digest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStderr_raw()).compareTo(other.isSetStderr_raw());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStderr_raw()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stderr_raw, other.stderr_raw);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStderr_digest()).compareTo(other.isSetStderr_digest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStderr_digest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stderr_digest, other.stderr_digest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDuration_secs()).compareTo(other.isSetDuration_secs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDuration_secs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.duration_secs, other.duration_secs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ActionResult(");
    boolean first = true;

    sb.append("output_files:");
    if (this.output_files == null) {
      sb.append("null");
    } else {
      sb.append(this.output_files);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("output_directories:");
    if (this.output_directories == null) {
      sb.append("null");
    } else {
      sb.append(this.output_directories);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("exit_code:");
    sb.append(this.exit_code);
    first = false;
    if (isSetStdout_raw()) {
      if (!first) sb.append(", ");
      sb.append("stdout_raw:");
      if (this.stdout_raw == null) {
        sb.append("null");
      } else {
        org.apache.thrift.TBaseHelper.toString(this.stdout_raw, sb);
      }
      first = false;
    }
    if (isSetStdout_digest()) {
      if (!first) sb.append(", ");
      sb.append("stdout_digest:");
      if (this.stdout_digest == null) {
        sb.append("null");
      } else {
        sb.append(this.stdout_digest);
      }
      first = false;
    }
    if (isSetStderr_raw()) {
      if (!first) sb.append(", ");
      sb.append("stderr_raw:");
      if (this.stderr_raw == null) {
        sb.append("null");
      } else {
        org.apache.thrift.TBaseHelper.toString(this.stderr_raw, sb);
      }
      first = false;
    }
    if (isSetStderr_digest()) {
      if (!first) sb.append(", ");
      sb.append("stderr_digest:");
      if (this.stderr_digest == null) {
        sb.append("null");
      } else {
        sb.append(this.stderr_digest);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("duration_secs:");
    sb.append(this.duration_secs);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (stdout_digest != null) {
      stdout_digest.validate();
    }
    if (stderr_digest != null) {
      stderr_digest.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ActionResultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ActionResultStandardScheme getScheme() {
      return new ActionResultStandardScheme();
    }
  }

  private static class ActionResultStandardScheme extends org.apache.thrift.scheme.StandardScheme<ActionResult> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ActionResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // OUTPUT_FILES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list96 = iprot.readListBegin();
                struct.output_files = new java.util.ArrayList<OutputFile>(_list96.size);
                OutputFile _elem97;
                for (int _i98 = 0; _i98 < _list96.size; ++_i98)
                {
                  _elem97 = new OutputFile();
                  _elem97.read(iprot);
                  struct.output_files.add(_elem97);
                }
                iprot.readListEnd();
              }
              struct.setOutput_filesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // OUTPUT_DIRECTORIES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list99 = iprot.readListBegin();
                struct.output_directories = new java.util.ArrayList<OutputDirectory>(_list99.size);
                OutputDirectory _elem100;
                for (int _i101 = 0; _i101 < _list99.size; ++_i101)
                {
                  _elem100 = new OutputDirectory();
                  _elem100.read(iprot);
                  struct.output_directories.add(_elem100);
                }
                iprot.readListEnd();
              }
              struct.setOutput_directoriesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // EXIT_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.exit_code = iprot.readI32();
              struct.setExit_codeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // STDOUT_RAW
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.stdout_raw = iprot.readBinary();
              struct.setStdout_rawIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // STDOUT_DIGEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.stdout_digest = new com.facebook.remoteexecution.cas.Digest();
              struct.stdout_digest.read(iprot);
              struct.setStdout_digestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // STDERR_RAW
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.stderr_raw = iprot.readBinary();
              struct.setStderr_rawIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // STDERR_DIGEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.stderr_digest = new com.facebook.remoteexecution.cas.Digest();
              struct.stderr_digest.read(iprot);
              struct.setStderr_digestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // DURATION_SECS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.duration_secs = iprot.readI64();
              struct.setDuration_secsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ActionResult struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.output_files != null) {
        oprot.writeFieldBegin(OUTPUT_FILES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.output_files.size()));
          for (OutputFile _iter102 : struct.output_files)
          {
            _iter102.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.output_directories != null) {
        oprot.writeFieldBegin(OUTPUT_DIRECTORIES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.output_directories.size()));
          for (OutputDirectory _iter103 : struct.output_directories)
          {
            _iter103.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(EXIT_CODE_FIELD_DESC);
      oprot.writeI32(struct.exit_code);
      oprot.writeFieldEnd();
      if (struct.stdout_raw != null) {
        if (struct.isSetStdout_raw()) {
          oprot.writeFieldBegin(STDOUT_RAW_FIELD_DESC);
          oprot.writeBinary(struct.stdout_raw);
          oprot.writeFieldEnd();
        }
      }
      if (struct.stdout_digest != null) {
        if (struct.isSetStdout_digest()) {
          oprot.writeFieldBegin(STDOUT_DIGEST_FIELD_DESC);
          struct.stdout_digest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.stderr_raw != null) {
        if (struct.isSetStderr_raw()) {
          oprot.writeFieldBegin(STDERR_RAW_FIELD_DESC);
          oprot.writeBinary(struct.stderr_raw);
          oprot.writeFieldEnd();
        }
      }
      if (struct.stderr_digest != null) {
        if (struct.isSetStderr_digest()) {
          oprot.writeFieldBegin(STDERR_DIGEST_FIELD_DESC);
          struct.stderr_digest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldBegin(DURATION_SECS_FIELD_DESC);
      oprot.writeI64(struct.duration_secs);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ActionResultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ActionResultTupleScheme getScheme() {
      return new ActionResultTupleScheme();
    }
  }

  private static class ActionResultTupleScheme extends org.apache.thrift.scheme.TupleScheme<ActionResult> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ActionResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetOutput_files()) {
        optionals.set(0);
      }
      if (struct.isSetOutput_directories()) {
        optionals.set(1);
      }
      if (struct.isSetExit_code()) {
        optionals.set(2);
      }
      if (struct.isSetStdout_raw()) {
        optionals.set(3);
      }
      if (struct.isSetStdout_digest()) {
        optionals.set(4);
      }
      if (struct.isSetStderr_raw()) {
        optionals.set(5);
      }
      if (struct.isSetStderr_digest()) {
        optionals.set(6);
      }
      if (struct.isSetDuration_secs()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetOutput_files()) {
        {
          oprot.writeI32(struct.output_files.size());
          for (OutputFile _iter104 : struct.output_files)
          {
            _iter104.write(oprot);
          }
        }
      }
      if (struct.isSetOutput_directories()) {
        {
          oprot.writeI32(struct.output_directories.size());
          for (OutputDirectory _iter105 : struct.output_directories)
          {
            _iter105.write(oprot);
          }
        }
      }
      if (struct.isSetExit_code()) {
        oprot.writeI32(struct.exit_code);
      }
      if (struct.isSetStdout_raw()) {
        oprot.writeBinary(struct.stdout_raw);
      }
      if (struct.isSetStdout_digest()) {
        struct.stdout_digest.write(oprot);
      }
      if (struct.isSetStderr_raw()) {
        oprot.writeBinary(struct.stderr_raw);
      }
      if (struct.isSetStderr_digest()) {
        struct.stderr_digest.write(oprot);
      }
      if (struct.isSetDuration_secs()) {
        oprot.writeI64(struct.duration_secs);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ActionResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list106 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.output_files = new java.util.ArrayList<OutputFile>(_list106.size);
          OutputFile _elem107;
          for (int _i108 = 0; _i108 < _list106.size; ++_i108)
          {
            _elem107 = new OutputFile();
            _elem107.read(iprot);
            struct.output_files.add(_elem107);
          }
        }
        struct.setOutput_filesIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list109 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.output_directories = new java.util.ArrayList<OutputDirectory>(_list109.size);
          OutputDirectory _elem110;
          for (int _i111 = 0; _i111 < _list109.size; ++_i111)
          {
            _elem110 = new OutputDirectory();
            _elem110.read(iprot);
            struct.output_directories.add(_elem110);
          }
        }
        struct.setOutput_directoriesIsSet(true);
      }
      if (incoming.get(2)) {
        struct.exit_code = iprot.readI32();
        struct.setExit_codeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.stdout_raw = iprot.readBinary();
        struct.setStdout_rawIsSet(true);
      }
      if (incoming.get(4)) {
        struct.stdout_digest = new com.facebook.remoteexecution.cas.Digest();
        struct.stdout_digest.read(iprot);
        struct.setStdout_digestIsSet(true);
      }
      if (incoming.get(5)) {
        struct.stderr_raw = iprot.readBinary();
        struct.setStderr_rawIsSet(true);
      }
      if (incoming.get(6)) {
        struct.stderr_digest = new com.facebook.remoteexecution.cas.Digest();
        struct.stderr_digest.read(iprot);
        struct.setStderr_digestIsSet(true);
      }
      if (incoming.get(7)) {
        struct.duration_secs = iprot.readI64();
        struct.setDuration_secsIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}


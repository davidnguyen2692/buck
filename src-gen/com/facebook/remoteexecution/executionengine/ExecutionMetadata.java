/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.facebook.remoteexecution.executionengine;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)")
public class ExecutionMetadata implements org.apache.thrift.TBase<ExecutionMetadata, ExecutionMetadata._Fields>, java.io.Serializable, Cloneable, Comparable<ExecutionMetadata> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ExecutionMetadata");

  private static final org.apache.thrift.protocol.TField STAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("stage", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField ACTION_DIGEST_FIELD_DESC = new org.apache.thrift.protocol.TField("action_digest", org.apache.thrift.protocol.TType.STRUCT, (short)2);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ExecutionMetadataStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ExecutionMetadataTupleSchemeFactory();

  /**
   * 
   * @see ExecutionStage
   */
  public ExecutionStage stage; // required
  public com.facebook.remoteexecution.cas.Digest action_digest; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see ExecutionStage
     */
    STAGE((short)1, "stage"),
    ACTION_DIGEST((short)2, "action_digest");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // STAGE
          return STAGE;
        case 2: // ACTION_DIGEST
          return ACTION_DIGEST;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.STAGE, new org.apache.thrift.meta_data.FieldMetaData("stage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, ExecutionStage.class)));
    tmpMap.put(_Fields.ACTION_DIGEST, new org.apache.thrift.meta_data.FieldMetaData("action_digest", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.facebook.remoteexecution.cas.Digest.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ExecutionMetadata.class, metaDataMap);
  }

  public ExecutionMetadata() {
  }

  public ExecutionMetadata(
    ExecutionStage stage,
    com.facebook.remoteexecution.cas.Digest action_digest)
  {
    this();
    this.stage = stage;
    this.action_digest = action_digest;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ExecutionMetadata(ExecutionMetadata other) {
    if (other.isSetStage()) {
      this.stage = other.stage;
    }
    if (other.isSetAction_digest()) {
      this.action_digest = new com.facebook.remoteexecution.cas.Digest(other.action_digest);
    }
  }

  public ExecutionMetadata deepCopy() {
    return new ExecutionMetadata(this);
  }

  @Override
  public void clear() {
    this.stage = null;
    this.action_digest = null;
  }

  /**
   * 
   * @see ExecutionStage
   */
  public ExecutionStage getStage() {
    return this.stage;
  }

  /**
   * 
   * @see ExecutionStage
   */
  public ExecutionMetadata setStage(ExecutionStage stage) {
    this.stage = stage;
    return this;
  }

  public void unsetStage() {
    this.stage = null;
  }

  /** Returns true if field stage is set (has been assigned a value) and false otherwise */
  public boolean isSetStage() {
    return this.stage != null;
  }

  public void setStageIsSet(boolean value) {
    if (!value) {
      this.stage = null;
    }
  }

  public com.facebook.remoteexecution.cas.Digest getAction_digest() {
    return this.action_digest;
  }

  public ExecutionMetadata setAction_digest(com.facebook.remoteexecution.cas.Digest action_digest) {
    this.action_digest = action_digest;
    return this;
  }

  public void unsetAction_digest() {
    this.action_digest = null;
  }

  /** Returns true if field action_digest is set (has been assigned a value) and false otherwise */
  public boolean isSetAction_digest() {
    return this.action_digest != null;
  }

  public void setAction_digestIsSet(boolean value) {
    if (!value) {
      this.action_digest = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case STAGE:
      if (value == null) {
        unsetStage();
      } else {
        setStage((ExecutionStage)value);
      }
      break;

    case ACTION_DIGEST:
      if (value == null) {
        unsetAction_digest();
      } else {
        setAction_digest((com.facebook.remoteexecution.cas.Digest)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case STAGE:
      return getStage();

    case ACTION_DIGEST:
      return getAction_digest();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case STAGE:
      return isSetStage();
    case ACTION_DIGEST:
      return isSetAction_digest();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof ExecutionMetadata)
      return this.equals((ExecutionMetadata)that);
    return false;
  }

  public boolean equals(ExecutionMetadata that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_stage = true && this.isSetStage();
    boolean that_present_stage = true && that.isSetStage();
    if (this_present_stage || that_present_stage) {
      if (!(this_present_stage && that_present_stage))
        return false;
      if (!this.stage.equals(that.stage))
        return false;
    }

    boolean this_present_action_digest = true && this.isSetAction_digest();
    boolean that_present_action_digest = true && that.isSetAction_digest();
    if (this_present_action_digest || that_present_action_digest) {
      if (!(this_present_action_digest && that_present_action_digest))
        return false;
      if (!this.action_digest.equals(that.action_digest))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetStage()) ? 131071 : 524287);
    if (isSetStage())
      hashCode = hashCode * 8191 + stage.getValue();

    hashCode = hashCode * 8191 + ((isSetAction_digest()) ? 131071 : 524287);
    if (isSetAction_digest())
      hashCode = hashCode * 8191 + action_digest.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(ExecutionMetadata other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetStage()).compareTo(other.isSetStage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stage, other.stage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAction_digest()).compareTo(other.isSetAction_digest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAction_digest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.action_digest, other.action_digest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ExecutionMetadata(");
    boolean first = true;

    sb.append("stage:");
    if (this.stage == null) {
      sb.append("null");
    } else {
      sb.append(this.stage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("action_digest:");
    if (this.action_digest == null) {
      sb.append("null");
    } else {
      sb.append(this.action_digest);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (action_digest != null) {
      action_digest.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ExecutionMetadataStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ExecutionMetadataStandardScheme getScheme() {
      return new ExecutionMetadataStandardScheme();
    }
  }

  private static class ExecutionMetadataStandardScheme extends org.apache.thrift.scheme.StandardScheme<ExecutionMetadata> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ExecutionMetadata struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // STAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.stage = com.facebook.remoteexecution.executionengine.ExecutionStage.findByValue(iprot.readI32());
              struct.setStageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ACTION_DIGEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.action_digest = new com.facebook.remoteexecution.cas.Digest();
              struct.action_digest.read(iprot);
              struct.setAction_digestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ExecutionMetadata struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.stage != null) {
        oprot.writeFieldBegin(STAGE_FIELD_DESC);
        oprot.writeI32(struct.stage.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.action_digest != null) {
        oprot.writeFieldBegin(ACTION_DIGEST_FIELD_DESC);
        struct.action_digest.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ExecutionMetadataTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ExecutionMetadataTupleScheme getScheme() {
      return new ExecutionMetadataTupleScheme();
    }
  }

  private static class ExecutionMetadataTupleScheme extends org.apache.thrift.scheme.TupleScheme<ExecutionMetadata> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ExecutionMetadata struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetStage()) {
        optionals.set(0);
      }
      if (struct.isSetAction_digest()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetStage()) {
        oprot.writeI32(struct.stage.getValue());
      }
      if (struct.isSetAction_digest()) {
        struct.action_digest.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ExecutionMetadata struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        struct.stage = com.facebook.remoteexecution.executionengine.ExecutionStage.findByValue(iprot.readI32());
        struct.setStageIsSet(true);
      }
      if (incoming.get(1)) {
        struct.action_digest = new com.facebook.remoteexecution.cas.Digest();
        struct.action_digest.read(iprot);
        struct.setAction_digestIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

